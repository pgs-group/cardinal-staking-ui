import { useState, useEffect } from 'react'
import Head from 'next/head'
import { useWallet } from '@solana/wallet-adapter-react'

import { fetchNfts } from 'api/api_custom'
import HeaderRefund from 'common/HeaderRefund'
import FooterRefund from 'common/FooterRefund'
import BasicCard from 'components/BasicCard'
import GridFilters from 'components/GridFilters'
import BasicBreadcrumb from 'common/BasicBreadcrumb'
import CardPlaceholder from 'components/BasicCard/CardPlaceholder'

export default function refund() {
  const { wallet, publicKey, connecting, connected } = useWallet()
  const [cards, setCards] = useState([])
  const [filters, setFilters] = useState({})
  const [loading, setLoading] = useState(false)

  const filteredCards = () => {
    if (!cards || !cards.length) return []
    if (!filters.search) return cards
    return cards.filter((card) => {
      return !(card.name.indexOf(filters.search) > -1)
    })
  }

  useEffect(() => {
    if (!publicKey) return
    setCards([])
    setLoading(true)
    fetchNfts(publicKey, filters).then((res) => {
      setCards(res)
      setLoading(false)
    })
  }, [publicKey, filters.type])

  return (
    <div>
      <Head>
        <title>Honeyland Nfts</title>
        <meta name="description" content="Generated by Honeyland" />
        <link
          rel="apple-touch-icon"
          sizes="76x76"
          href="/apple-touch-icon.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff" />
        <link
          href="https://fonts.googleapis.com/css2?family=Urbanist:wght@300;400;600;700&display=swap"
          rel="stylesheet"
        />
      </Head>
      <div className="flex h-screen flex-col">
        <HeaderRefund />
        <div className="container mx-auto flex-auto py-10">
          <BasicBreadcrumb title="Explore" />
          {publicKey && (
            <GridFilters
              filters={filters}
              updateFilters={(val) => setFilters(val)}
            />
          )}
          {!wallet && !connecting && !connected && (
            <h3 className="py-10 text-center text-2xl text-white">
              Please connect to your wallet
            </h3>
          )}
          <div className="grid justify-center gap-8 lg:grid-cols-2 xl:grid-cols-3">
            {filteredCards().map((card, index) => (
              <BasicCard data={card} key={index} />
            ))}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
            {loading && <CardPlaceholder />}
          </div>
        </div>
        <FooterRefund />
      </div>
    </div>
  )
}
